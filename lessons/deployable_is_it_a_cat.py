# AUTOGENERATED! DO NOT EDIT! File to edit: 02_app.ipynb.

# %% auto 0
__all__ = ['learn', 'five_way_learn', 'categories', 'five_categories', 'image_widget', 'label_widget', 'examples',
           'cat_dog_interface', 'five_way_interface', 'demo', 'is_cat', 'classify_cat_dog', 'classify_five_way']

# %% 02_app.ipynb 3
from fastai.vision.all import *
import gradio

# from fastcore.all import *
# import time, json


def is_cat(x):
    return x[0].isupper()


# %% 02_app.ipynb 5
learn = load_learner("02_is_cat_model.pkl")
five_way_learn = load_learner('02_bass_guitar_kitten_puppy_bird.pkl')

# %% 02_app.ipynb 7
categories = ("Dog", "Cat")

def classify_cat_dog(img):
    pred, idx, probs = learn.predict(img)
    return dict(zip(categories, [float(prob) for prob in probs]))


five_categories = tuple(five_way_learn.dls.vocab)
def classify_five_way(img):
    pred, idx, probs = five_way_learn.predict(img)
    return dict(zip(five_categories, [float(prob) for prob in probs]))


# %% 02_app.ipynb 10
image_widget = gradio.Image(height=192, width=192)
label_widget = gradio.Label()

examples = ["dog.jpg", "cat.jpg", "dunno.jpg"]

#intf = gradio.Interface(fn=classify_image, inputs=image_widget, outputs=label_widget, examples=examples)
cat_dog_interface = gradio.Interface(
    fn=classify_cat_dog,
    inputs=gradio.Image(type="pil"),
    outputs=gradio.Label(num_top_classes=2),
    title="Cat or Dog Classifier",
    description="Upload an image to see if it's a cat or a dog"
)

five_way_interface = gradio.Interface(
    fn=classify_five_way,
    inputs=gradio.Image(type="pil"),
    outputs=gradio.Label(num_top_classes=5),
    title="Five-Way Classifier",
    description="Identify bass, guitar, kitten, puppy, or bird"
)

# Create tabbed interface
demo = gradio.TabbedInterface(
    [cat_dog_interface, five_way_interface],
    ["Cat vs Dog", "Five-Way Classifier"]
)

# %% 02_app.ipynb 13
demo.launch(inline=False)
